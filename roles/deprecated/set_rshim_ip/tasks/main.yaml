###############################################################################
#
# Copyright 2021 NVIDIA Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
###############################################################################

# We need to check not only the file name, but the file contents. It is possible the user has modified
# the default networking configuration. In this case we do not want to overwrite it.
- name: Check if default Ubuntu Netplan configuration exists
  copy:
    src: 01-network-manager-all.yaml
    dest: /etc/netplan/01-network-manager-all.yaml
  when: ansible_distribution == 'Ubuntu'
  register: default_netplan_config
  check_mode: yes

# When the existing 01-network-manager-all.yaml file matches the default
# there is no Ansible action. The registered variable will be "skipped".
# In this case, we want to remove it and replace it.
- name: Remove default netplan configuration
  file:
    path: /etc/netplan/01-network-manager-all.yaml
    state: absent
  when: not default_netplan_config.changed and ansible_distribution == 'Ubuntu'  # noqa 503
  # [503] Tasks that run when changed should likely be handlers

- name: Apply new default netplan configuration
  copy:
    src: 10-dhcp-ethernets.yaml
    dest: /etc/netplan/10-dhcp-ethernets.yaml
  notify: apply netplan
  when: not default_netplan_config.changed and ansible_distribution == 'Ubuntu'  # noqa 503
  # [503] Tasks that run when changed should likely be handlers

- name: Copy rshim IP to Bluefield on Ubuntu
  copy:
    src: 20-tmfifo.yaml
    dest: /etc/netplan/20-tmfifo.yaml
  when: ansible_distribution == 'Ubuntu'
  notify: apply netplan

- name: Copy rshim IP to Bluefield on RedHat
  copy:
    src: ifcfg-tmfifo_net0
    dest: /etc/sysconfig/network-scripts
  notify: rhel up tmfifo_net0
  when: ansible_distribution == 'RedHat'

- name: Apply rshim IP
  meta: flush_handlers

- name: Is the rshim interface live?
  wait_for:
    port: 22
    delay: 20
    timeout: 300
    host: 192.168.100.1
