###############################################################################
#
# Copyright 2021 NVIDIA Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
###############################################################################

## Work on the container yaml file for kubelet
- name: Check if resources are already downloaded
  command: ngc registry resource info {{ container_resources_path }}
  register: container_config_info
  changed_when: false

- name: check version
  set_fact:
    container_resources_version: "{{ (container_config_info.stdout|from_json).latestVersionIdStr }}"

- name: Pull container resources files
  command:
    cmd: ngc registry resource download-version {{ container_resources_path }}
    creates: /root/doca_container_configs_v{{ container_resources_version }}
    chdir: /root
  register: container_config_download

# Run the hbn setup script
- name: Run Setup Script
  command: 
    cmd: bash hbn-dpu-setup.sh
    chdir: /root/doca_container_configs_v{{ container_resources_version }}/scripts/doca_hbn
  register: setup_script_output

- name: set fact
  set_fact:
    setup_script_stdout: "{{ setup_script_output.stdout }}"

- name: Output fact
  debug:
    var: setup_script_stdout

#- when: setup_script_stdout is regex("lease power cycle")
#  block:
#    - name: include_role
#      include_role:
#        name: try_mlxfwreset_warmboot
      #when: reboot_needed is defined and reboot_needed is true

- name: Notify if Manual Cold Reboot/Hard Power Cycle needed
  debug:
    msg: "You must Cold Reboot (Hard power cycle) for changes to take effect"
  when: setup_script_stdout is regex("lease power cycle")
#  when: mlxfwreset_success is false and setup_script_stdout is regex("lease power cycle")

#- when: 
#  - setup_script_stdout is not regex("lease power cycle")
#  - hostvars[inventory_hostname]['parent_host'] is defined
#  - mlxfwreset_success is false or mlxfwreset_success is undefined
#  block:
#    - name: Reboot DPU
#      reboot:
#        pre_reboot_delay: 30
     
     # might need to reboot the host - restarting this driver is not always reliable
#    - name: restart openibd driver on host
#      systemd:
#        name: openibd
#        state: restarted
#      delegate_to: "{{ hostvars[inventory_hostname]['parent_host'] }}"

# create a symlink for a special case of 1.3.1
- name: Special case for 1.3.1
  file:
    dest: /root/doca_container_configs_v1.3.1/configs/1.3.1
    src: /root/doca_container_configs_v1.3.1/configs/1.3.0
    mode: 0755
    state: link
  when: container_resources_version == "1.3.1"

# copy yaml file to kublet
- name: Copy yaml file to kubelet.d
  command: cp "/root/doca_container_configs_v{{ container_resources_version }}/configs/{{ container_resources_version }}/doca_hbn.yaml" /etc/kubelet.d/doca_hbn.yaml
  # [204] Lines should be no longer than 160 chars
  changed_when: false

- name: Ensure kubelet is started
  systemd:
    name: kubelet
    state: started
