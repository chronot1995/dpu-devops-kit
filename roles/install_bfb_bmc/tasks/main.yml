###############################################################################
#
# Copyright 2021 NVIDIA Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
###############################################################################

## This pulls in the variables file from the networking role
## This is used in the last play to verify the DPU is back online

- name: Checking if BFB has been downloaded
  stat:
    path: '/tmp/{{ doca_bfb }}'
  register: bfbdownload
  delegate_to: localhost

- name: Download bfb from the Internet
  get_url:
    url: '{{ bfb_download_url }}'
    dest: '/tmp'
  delegate_to: localhost
  when: not bfbdownload.stat.exists

- name: Role - build_bfb_cfg
  import_role:
    name: build_bfb_cfg
  delegate_to: localhost

- name: Setting a fact to parse the task ID
  ansible.builtin.set_fact:
    hostsfiles:
      - /tmp/bf.cfg
      - /tmp/{{ doca_bfb }}

- name: read files
  command: awk 1 {{ hostsfiles | join(' ') }}
  register: hosts_contents
  delegate_to: localhost

- name: create hosts file
  copy:
    dest: /tmp/
    content: "{{ hosts_contents.stdout_lines | unique |join('\n') }}"
  delegate_to: localhost

- name: Fail for debugging
  ansible.builtin.fail:
    msg: Quitting yo

- name: Stop rshim on the BMC 1/2
  ansible.builtin.raw: /bin/bash -c "systemctl stop rshim"

- name: Start rshim on the BMC 2/2
  ansible.builtin.raw: /bin/bash -c "systemctl start rshim"

# Take 1 - This process takes 15 mins, at least
- name: SCP BFB to BMC Rshim
  command: 'sshpass -p "{{ ansible_password }}" scp -oStrictHostKeyChecking=no /tmp/{{ doca_bfb }} {{ ansible_user }}@{{ ansible_host }}:/dev/rshim0/boot'
  # async: 3600
  # poll: 0
  register: scptobmc
  delegate_to: localhost
  failed_when: '"truncate" not in scptobmc.stderr'

# - name: Check on the SCP task
#   async_status:
#     jid: '{{ scptobmc.ansible_job_id }}'
#   register: job_result
#   until: job_result.finished
#   retries: 300
#   delay: 10

# - debug:
#     msg: '{{ scptobmc }}'

# - name: Poll the BMC SSH on the BMC
#   ansible.builtin.wait_for:
#     port: 22
#     host: '{{ ansible_host }}'
#     delay: 10
#   register: verifybmc

# - debug:
#     msg: '{{ verifybmc }}'

# - name: Load bfb into bf2...this will take a while # noqa 305
#   shell: 'bfb-install --bfb /tmp/{{ doca_bfb }} --config /tmp/bf.cfg --rshim rshim{{ rshim_num }}'
#   # [305] Use shell only when shell functionality is required
#   changed_when: false

# - name: Remove bf.cfg file
#   file:
#     path: /tmp/bf.cfg
#     state: absent

# # this drops an ssh client config file that allows you to do 'ssh rshim0' or 'ssh rshim1' and use the ipv6 link local addresses
# - name: Ensure ssh config file is in place
#   template:
#     src: rshimX.conf.j2
#     dest: /etc/ssh/ssh_config.d/rshim{{ rshim_num }}.conf
#     mode: 0644

- name: Pause for 2 minutes - DPU needs to catch its breath
  pause:
    minutes: 2
# - name: Role - rshim_check
#   import_role:
#     name: rshim_check
